import marshal, inspect , hashlib

layer_1=b"6\x15U\x15U\x15U\x15U\x15U\x15U\x15U\x15U\x12U\x15UUU\x15Uf)\x15U\x150\x150\x14\xf5\x170\x16\xf4\x14\xf5\x11\xf4\x15\xf5\x10\xf4\x15\xd6\x14\x0f\x130\x151\x15\xf5\x121\x141\x17\xd1\x150\x14\xf5\x170\x16\xf4\x14\xf5\x11\xf4\x15\xf5\x10\xf4\x15\x11\x15\xd6\x14\xf4\x14\xd6\x141\x16C\x15\x0f\x1d0\x130\x1d2\x17\x0f\x1c0\x1f0\x1e0\x1c\xd6\x17\x0f\x19/\x1f0\x180\x1b\xf5\x1a0\x19\xf4\x14\xd6\x14T\x15\x02\x151\x10\x06\x15T\x15T\x15T\x150\x051\x11\xd6\x14T\x15\x0c\x151\x10\x06\x15|\x13\x8f\x156\x14U\x15U\x15U\x15U\x15U\x15U\x17U\x15U\x11U\x15UVU\x15UfA\x15U\x152\x15)\x15\x08\x13(\x14!\x15)\x14\xd6\x14\xc4\x17$\x17\x06\x15\xfc\x15|\x14\x8f\x16&a'<W\xcfW;e\xcfTm'\x14U\x15UgT\x15U\x15\xaf\x1dif!g<{2+\x8f\x1fiy<f!v:x%+V\x15U\x15&\x17U\x15U\x01UgS\x15U\x15\xbcsU\x15UoeQ:{raua'lua:58p&fub<a=58py5\x1c29yuv4y95!}05%z9|6p{[|\x04\x8f\x169p;\xcfR|;f%p6a\x8f\x1c2p!f:`'v0\xcfQx4|;\xcfSp;v:q0\xcf_f%y<a9|;p&\xcfTM\x8f\x11?z<{\x8f\x14\x0c\xcfT~\x8f\x121p6g,e!\xcfRy4l0g\n'\x8f\x116z1p\x8f\x110m0v\x8f\x128t'f=t9\xcfPy:t1f\x8f\x10%g<{!gT\x15U\x15'\x14U\x15UgT\x15U\x15'\x10U\x15U\xcf])8z1`9pk\x14U\x15UfE\x15U\x15C\x14\x7f\x14]\x14_\x14W\x14A\x14S\x14[\x14"
layer_2 =b"vH\x15H\x15H\x15H\x15H\x15H\x15H\x15H\x15O\x15H\x15\x08\x15H\x15;[H\x15HpH\xb5IpJ\xb4I\xb5K\xb4H\xb5L\xb4HOMpMrHqH\xb7I~JgipNqI\x96I\x14HpOp@\xb5ApBpCqJqKrJ\x96J\xb4I\x96I\x14HqMFHpNqL\x96I\x14HqMFH<N<a\xe6K\x15H\x15,p.fO\x15H\x15%t!{`<rgH\x15H\x15;\x18H\x15Hp&v:l8a`vd~a/\xbb\x13H\x15Hq-vuN\x15\xe6K\x15H\x15.z:\xe6I\x15H\x15!\xe6J\x15H\x15!{\xbb\x1bH\x15Hg){/p`y-{`va<r\xe6V\x15H\x15,p+;)e8p&q`=+N!H\x16~\x13|my-{`~aHa<\xbb\x13H\x15Hg-a=g&\xe6B\x15H\x15*l<p;=,p+<:\x15H\x15HfE\x15H\x15,p+g1e<=+9#<rgI\x15H\x15:\x17H\x15HgK\x15H\x15:\x11H\x15HgM\x15H\x15:\x13H\x15HgO\x15H\x15:\x1dH\x15Hf|\x15H\x15\x11($p&=!{;e-v<;/p<f'`:v-=%t!{a;-{+z,p`<ff8y!a$|&p;=a<;\x13H\x15HMu%0 }fO\x15H\x15\x03(`MdLaf[\x15H\x15;p+g-au|&e=a`7\x1ba'edfK\x15H\x15;t1fK\x15H\x15<}-f@\x15H\x158t;f?z:q;\x16H\x15H(u+;\x17H\x15H7afL\x15H\x15+z,p;\x00H\x15H(,p+g1e<=`y)l-g\x17$a9\x03<;\x16H\x15Ha:l\xbb\x14H\x15H/;\x0cH\x15Hp0p+=%t:f t$;$z)q;=+z,pa<;\x12H\x15Hp0v-e</;\x19H\x15He:|&a`7\x1c}-g-fJ\x15H\x15!f\xbb\x14H\x15Ht;\x1cH\x15He:z*y-xj<2'\x1c}!fh|;5)58g'a-v<p,5;v:|8ahB:|<a-{hw15\ng)thO)t:p-g\xa1\x02H\x15H\xfck\x15H\x152%\x0cz&2<5<g15<zhx-f;5?|<}hx-9h\\oy$5+t$yha phe'y!v-;\x06<D\xcfO|&f8p+a\x92\x1c/p<f'`:v-\xcfLx)|&\xcfNp&v'q-\xcfMf8y!a\x92\x14\x10\xcfMe:|&a\x92\x11-m-v\x92\x12%t:f t$\xcfMy't,f\x92\x12,p+g1e<\xcfCf-v:p<J+z,p\xe1\x15:\x0cH\x15HgQ\x15H\x15\xb2\x1dtf<g!{/+\x92\x1dtx'q=y-+I\x15H\x15;\x1fH\x15H\x07J\x19I\x1dI\tI\x19J"
secret_code=b't#\x17#\x17#\x17#\x17#\x17#\x17#\x17#\x17!\x17#\x17c\x17#\x17P7#\x17#r#s#|!e)r"s"\x94"\x16#s D#r"s!\x94"\x16#s D#>\'m/U\x13DpHpR`EfC\x02m\x05TLzF7Jy\x0f7ZxV0Ur\x03uFrM7D~UrM7SrQzJdP~Ly\rm\x01@QxMp\x0f7Dx\x03uBtH7T\x7fFeF7ZxV7@vNr\x03qQxNY\n\x15\xf9\x11Pr@eFc\xf9\x12SeJyW\xbe#e!\x17#\x17Q\x15#\x17#\xed++PcQ~Mp\x1d\xcd++NxGbOr\x1d\x16#\x17#d%\x17#\x17+\x16/\x16/\x15'

def main():
    def encrypt(c,k):
        dec=[]
        for i in range(len(c)):
            dec.append((c[i]^k[i%len(k)]))
        return bytes(dec)

    def decrypt(c,k):
        dec=[]
        for i in range(len(c)):
            dec.append((c[i]^k[i%len(k)]))
        return bytes(dec) 
    Y=len(inspect.getsource(main).encode().splitlines())
    X=0x55
    K=(X,Y)
    secret=input("Stop, say the password ==> ")
    code =decrypt((layer_1),K)
    try :
       exec(marshal.loads(code))
    except:
        print("There is a problem")


if __name__ == "__main__":
    main()
